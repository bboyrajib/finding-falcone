{"version":3,"sources":["Header/header.js","Footer/footer.js","Game/destination.js","Game/vehicle.js","Game/finalDestination.js","Game/success.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","react_default","a","createElement","className","target","rel","href","Component","Footer","Destination","this","props","id","onChange","name","value","destinationProps","destination","planets","map","planet","key","Vehicle","_this","eligibleVehicles","vehicle","type","total_no","FinalDestination","destinations","timeTaken","isSelected","vehicles","disabled","originalPlanetList","callPlanetsAPI","fetch","then","res","json","setState","push","callVehiclesAPI","handleChange","e","filter","remPlanet","_prevPlanet","prevPlanet","_remPlanets","Object","toConsumableArray","remPlanets","d","handleVehicles","max_distance","distance","handleReset","handleVehicleChange","changeButtonState","every","length","_this2","Fragment","onClick","src_Game_destination","Game_vehicle","react_router_dom","to","pathname","fromGame","Success","planetNames","vehicleNames","successMessage","getTokenAPI","method","headers","Accept","body","data","findFalconeAPI","token","Content-Type","JSON","stringify","planet_names","vehicle_names","status","undefined","location","history","planet_name","App","Header_header","react_router","path","exact","component","Footer_footer","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e75611f1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './header.css';\nclass Header extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div className=\"jumbotron\">\n                <h1 className=\"greenText text-center\">Finding Falcone</h1>\n                <div className=\"text-center\">\n                    <span className=\"navbar-brand whiteText\">a coding challenge by <code><a target=\"_blank\" className=\"pinkText\" rel=\"noopener noreferrer\" href=\"https://www.geektrust.in\">www.geektrust.in</a></code></span>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Header;","import React, { Component } from 'react';\nimport './footer.css';\n\nclass Footer extends Component {\n    state = {  }\n    render() { \n        return ( \n            <footer className=\"navbar-fixed-bottom footer-bg\">\n                <div className=\"footer-copyright text-center py-3\">Â© GeekTrust 2019 &nbsp;\n                    <a target=\"_blank\" className=\"text-white\" rel=\"noopener noreferrer\" href=\"https://www.geektrust.in/coding-problem/frontend/space\"> Finding Falcone</a>\n                </div>\n            </footer>\n\n         );\n    }\n}\n \nexport default Footer;","import React, { Component } from 'react';\nimport './destination.css';\n\nclass Destination extends Component {\n    render() {  \n        return ( \n                    <div><h3>Planet {this.props.id}</h3>\n                            <select onChange={this.props.onChange} className=\"m-3\" name={this.props.name} value={this.props.destinationProps.destination}>\n                                <option>{this.props.destinationProps.destination}</option>\n                                {this.props.planets.map(planet => <option key={planet.name} >{planet.name}</option>)}\n                            </select>\n                            <br/>   \n                    </div>  \n         );\n    }\n}\n \nexport default Destination;","import React, { Component } from 'react';\n\nclass Vehicle extends Component {\n    \n    render() { \n        return ( \n                <div className=\"vehicles text-left\">\n                    {this.props.destinationProps.eligibleVehicles.map(vehicle => <span><input onChange={this.props.onChange} key={this.props.destinationProps.name} type=\"radio\" name={this.props.destinationProps.name} value={vehicle.name}/><label className=\"m-2\">{vehicle.name} ({vehicle.total_no})</label><br/></span>)}\n                </div>\n         );\n    }\n}\n \nexport default Vehicle;","import React, { Component } from 'react';\nimport Destination from './destination';\nimport './destination.css';\nimport Vehicle from './vehicle'\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\n\nclass FinalDestination extends Component {\n    state = { \n       planets:[],\n       destinations: [\n           {id:\"One\",name:\"planetOne\",destination:\"----\",vehicle:\"\",timeTaken:\"\",isSelected:false,eligibleVehicles:[]},\n           {id:\"Two\",name:\"planetTwo\",destination:\"----\",vehicle:\"\",timeTaken:\"\",isSelected:false,eligibleVehicles:[]},\n           {id:\"Three\",name:\"planetThree\",destination:\"----\",vehicle:\"\",timeTaken:\"\",isSelected:false,eligibleVehicles:[]},\n           {id:\"Four\",name:\"planetFour\",destination:\"----\",vehicle:\"\",timeTaken:\"\",isSelected:false,eligibleVehicles:[]}\n       ],\n       vehicles:[],\n       disabled:true\n    }\n\n    originalPlanetList=[];\n\n\n    callPlanetsAPI=()=>{\n        fetch(\"https://findfalcone.herokuapp.com/planets\")\n            .then(res => res.json())\n            .then((planets) => {\n                this.setState({planets});\n                this.originalPlanetList.push(planets);\n            });\n        \n    }\n\n\n    callVehiclesAPI=()=>{\n        fetch(\"https://findfalcone.herokuapp.com/vehicles\")\n            .then(res => res.json())\n            .then((vehicles) => {\n                this.setState({vehicles});\n            });\n    }\n\n    \n    componentDidMount(){\n        this.callPlanetsAPI();\n        this.callVehiclesAPI();\n    }\n\n\n    handleChange = (e) => {\n        var isSelected = this.state.destinations.filter(destination=>{\n            return e.target.name===destination.name;\n        });\n        \n        if(isSelected[0].isSelected===false){\n\n            \n            var remPlanet = this.state.planets.filter(planet => {\n                  return planet.name!==e.target.value ;\n            });\n             \n            this.setState({planets:remPlanet});\n          }\n         else{\n            var _prevPlanet = isSelected[0];\n             \n            var prevPlanet = this.originalPlanetList[0].filter(planet=> planet.name===_prevPlanet.destination);\n            \n             let _remPlanets= [...this.state.planets];\n             _remPlanets.push(prevPlanet[0]);\n             var remPlanets = _remPlanets.filter(planet => {\n                  return planet.name!==e.target.value ;\n             });\n             this.setState({planets:remPlanets});\n         }\n         var destinations=[...this.state.destinations];\n         destinations.map(d=> {\n             if(d.name===e.target.name){\n                 d.isSelected=true;\n                 d.destination=e.target.value;\n             }\n             return '';\n         });\n         this.setState({destinations});\n\n        let planet = this.state.planets.filter(planet => {\n            return planet.name===e.target.value;\n        });\n         this.handleVehicles(planet, e);\n\n    }\n\n    handleVehicles = (planet, e) => {\n        let eligibleVehicles = this.state.vehicles.filter(vehicle=>{\n            return vehicle.max_distance>=planet[0].distance;\n        });\n        var destinations=[...this.state.destinations];\n         destinations.map(d=> {\n             if(d.name===e.target.name){\n                 d.eligibleVehicles = eligibleVehicles;\n             }\n             return '';\n         });\n         this.setState({destinations});\n    }\n\n    handleReset = () => {\n        this.setState({planets:[],\n            destinations: [\n                {id:\"One\",name:\"planetOne\",destination:\"----\",vehicle:\"\",timeTaken:\"\",isSelected:false},\n                {id:\"Two\",name:\"planetTwo\",destination:\"----\",vehicle:\"\",timeTaken:\"\",isSelected:false},\n                {id:\"Three\",name:\"planetThree\",destination:\"----\",vehicle:\"\",timeTaken:\"\",isSelected:false},\n                {id:\"Four\",name:\"planetFour\",destination:\"----\",vehicle:\"\",timeTaken:\"\",isSelected:false}\n            ],\n            vehicles:[]});\n        this.callPlanetsAPI();\n        this.callVehiclesAPI();\n    }\n\n    handleVehicleChange = (e) => {\n        var destinations=[...this.state.destinations];\n         destinations.map(d=> {\n             if(d.name===e.target.name){\n                 d.vehicle = e.target.value;\n             }\n             return '';\n         });\n         this.setState({destinations});\n         this.changeButtonState();\n    }\n\n    changeButtonState =() => {\n       var disabled = this.state.destinations.every(a=>{\n            return a.vehicle.length>0;\n        })\n        this.setState({disabled:!disabled});\n    }\n\n    \n    render() { \n        \n        return ( \n            <React.Fragment>\n            <button id=\"reset\" className=\"btn btn-danger float-right\" onClick={this.handleReset} type=\"submit\">Reset</button>\n                 <div className=\"container h-100 d-flex flex-column\">\n                        <h1 className=\"text-center p-5\">Select the planets you want to send vehicles to:</h1>\n                        <div id=\"main\">\n                            <div className=\"row text-center\">\n                                {this.state.destinations.map(destination => \n                                <div className=\"col\">\n                                    <Destination planets={this.state.planets} onChange={this.handleChange} destinationProps={destination} name={destination.name} key={destination.id} id={destination.id} />\n                                        {destination.isSelected?<Vehicle onChange={this.handleVehicleChange} destinationProps={destination}/>:null}\n                                </div>\n                                        )}\n                \n                \n                <br/><br/>\n                    \n                </div>\n                    <div className=\"row justify-content-center\">\n                        <Link to={{pathname:\"/success\",state:this.state.destinations,fromGame:true}} >\n                            <button disabled={this.state.disabled} className=\"btn btn-success\">Find Falcone!</button>\n                        </Link>\n                    </div>\n                </div>\n             </div>   \n             </React.Fragment> \n         );\n    }\n}\n \nexport default FinalDestination;","import React, { Component } from 'react';\nimport './success.css';\nimport {Link, Redirect} from 'react-router-dom';\n\nclass Success extends Component {\n    planetNames=[];\n    vehicleNames=[];\n    state={\n    successMessage:'',\n    planet:\"\"\n    };\n    \n    componentDidMount(){\n        let destinations = this.props.location.state;\n        if(destinations!==undefined){\n        this.planetNames=destinations.map(a=>{\n            return a.destination;\n        })\n        this.vehicleNames=destinations.map(a=>{\n            return a.vehicle;\n        })\n        }\n        this.getTokenAPI();\n    }\n    getTokenAPI=()=>{\n        fetch(\"https://findfalcone.herokuapp.com/token\",{\n            method:'POST',\n            headers:{\n                'Accept':'application/json'\n            },\n            body:{}\n        }).then(res => res.json())\n        .then((data) => {\n           this.findFalconeAPI(data.token,this.planetNames,this.vehicleNames);\n        })\n    }\n\n    findFalconeAPI=(token,planetNames,vehicleNames)=>{\n        this.setState({successMessage:\"Please wait while we calculate..\"})\n        fetch(\"https://findfalcone.herokuapp.com/find\",{\n            method:'POST',\n            headers:{\n                \"Accept\":\"application/json\",\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                \"token\":token,\n                \"planet_names\": planetNames,\n                \"vehicle_names\": vehicleNames\n            })\n        }).then(res=>res.json())\n        .then((data)=>{\n            if(data.status===\"error\" || data===undefined || this.props.location.fromGame!==true){\n                this.setState({successMessage:\"Please re-initialize the game!\"});\n                this.props.history.push('/');\n            }else\n                data.status===\"false\"?this.setState({successMessage:\"Sorry! You could not find Falcone!\"}):this.setState({successMessage:\"Congrats! You found Falcone!\", planet:data.planet_name})\n        })\n    }\n    render() { \n        \n        var planet=this.state.planet;\n        return ( \n            <React.Fragment>\n           \n            \n            <div className=\"container h-100 d-flex flex-column\">\n                <div id=\"main-success\">\n                <div className=\"row text-center\">\n                    <div className=\"col-md-12\">\n                        <h1 className=\"text-center p-5\">{this.state.successMessage}</h1> \n                    </div>\n                </div>\n                <div className=\"row text-center\">\n                    <div className=\"col-md-12\">\n                    {(planet!==null || planet!==undefined)&&(planet.length>0)?<h2 className=\"m-2\">Planet - <code>{planet}</code></h2>:null}\n                    </div>\n                </div>\n                <div className=\"row text-center\">\n                    <div className=\"col-md-12\">\n                    {(planet!==null || planet!==undefined)&&(planet.length>0)?<h2 className=\"m-2\">Time taken - <code>{planet}</code></h2>:null}\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                <Link to=\"/\" >\n                    <button className=\"btn btn-success\">Go-Back!</button>\n                </Link>\n                </div>\n                </div>\n            </div>\n            </React.Fragment>\n        \n        );\n    }\n}\n \nexport default Success;","import React from 'react';\nimport Header from './Header/header';\nimport Footer from './Footer/footer';\nimport FinalDestination from './Game/finalDestination';\nimport Success from './Game/success';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <Router>\n        <Switch>\n        <Route path=\"/\" exact component={FinalDestination}/>\n        <Route path=\"/success\" component={Success}/>\n        </Switch>\n      </Router>\n      <Footer />     \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}